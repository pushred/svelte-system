import clsx from 'clsx'
import kebabCase from 'lodash.kebabcase'

export function getClass({
  border,
  borderTop,
  borderRight,
  borderBottom,
  borderLeft,
  borderColor,
  borderTopColor,
  borderRightColor,
  borderBottomColor,
  borderLeftColor,
  borderStyle,
  borderStyleTop,
  borderStyleRight,
  borderStyleBottom,
  borderStyleLeft,
  borderWidth,
  borderWidthTop,
  borderWidthRight,
  borderWidthBottom,
  borderWidthLeft,
  backgroundColor,
  bgColor,
  color,
  alignItems,
  align,
  alignSelf,
  alignContent,
  flexBasis,
  basis,
  flexDirection,
  direction,
  flexGrow,
  grow,
  flexShrink,
  shrink,
  justifyContent,
  justify,
  justifyItems,
  justifySelf,
  order,
  display,
  d,
  overflow,
  overflowX,
  overflowY,
  verticalAlign,
  borderRadius,
  borderTopRightRadius,
  borderBottomRightRadius,
  borderBottomLeftRadius,
  borderTopLeftRadius,
  width,
  w,
  height,
  h,
  minWidth,
  minW,
  maxWidth,
  maxW,
  minHeight,
  minH,
  maxHeight,
  maxH,
  margin,
  m,
  marginTop,
  mt,
  marginRight,
  mr,
  marginBottom,
  mb,
  marginLeft,
  ml,
  padding,
  p,
  paddingTop,
  pt,
  paddingRight,
  pr,
  paddingBottom,
  pb,
  paddingLeft,
  pl,
  fontFamily,
  fontSize,
  fontWeight,
  letterSpacing,
  lineHeight,
  textAlign,
  textTransform,
} = {}) {
  return clsx({
    [`border-${border}`]: border !== undefined,
    [`border-top-${borderTop}`]: borderTop !== undefined,
    [`border-right-${borderRight}`]: borderRight !== undefined,
    [`border-bottom-${borderBottom}`]: borderBottom !== undefined,
    [`border-left-${borderLeft}`]: borderLeft !== undefined,
    [`border-color-${kebabCase(borderColor)}`]: borderColor !== undefined,
    [`border-top-color-${kebabCase(borderTopColor)}`]:
      borderTopColor !== undefined,
    [`border-right-color-${kebabCase(borderRightColor)}`]:
      borderRightColor !== undefined,
    [`border-bottom-color-${kebabCase(borderBottomColor)}`]:
      borderBottomColor !== undefined,
    [`border-left-color-${kebabCase(borderLeftColor)}`]:
      borderLeftColor !== undefined,
    [`border-style-${borderStyle}`]: borderStyle !== undefined,
    [`border-style-top-${borderStyleTop}`]: borderStyleTop !== undefined,
    [`border-style-right-${borderStyleRight}`]: borderStyleRight !== undefined,
    [`border-style-bottom-${borderStyleBottom}`]:
      borderStyleBottom !== undefined,
    [`border-style-left-${borderStyleLeft}`]: borderStyleLeft !== undefined,
    [`border-width-${borderWidth}`]: borderWidth !== undefined,
    [`border-width-top-${borderWidthTop}`]: borderWidthTop !== undefined,
    [`border-width-right-${borderWidthRight}`]: borderWidthRight !== undefined,
    [`border-width-bottom-${borderWidthBottom}`]:
      borderWidthBottom !== undefined,
    [`border-width-left-${borderWidthLeft}`]: borderWidthLeft !== undefined,
    [`bg-color-${kebabCase(backgroundColor ?? bgColor)}`]:
      backgroundColor !== undefined || bgColor !== undefined,
    [`color-${kebabCase(color)}`]: color !== undefined,
    [`align-${alignItems ?? align}`]:
      alignItems !== undefined || align !== undefined,
    [`align-self-${alignSelf}`]: alignSelf !== undefined,
    [`align-content-${alignContent}`]: alignContent !== undefined,
    [`basis-${flexBasis ?? basis}`]:
      flexBasis !== undefined || basis !== undefined,
    [`direction-${flexDirection ?? direction}`]:
      flexDirection !== undefined || direction !== undefined,
    [`grow-${flexGrow ?? grow}`]: flexGrow !== undefined || grow !== undefined,
    [`shrink-${flexShrink ?? shrink}`]:
      flexShrink !== undefined || shrink !== undefined,
    [`justify-${justifyContent ?? justify}`]:
      justifyContent !== undefined || justify !== undefined,
    [`justify-items-${justifyItems}`]: justifyItems !== undefined,
    [`justify-self-${justifySelf}`]: justifySelf !== undefined,
    [`order-${order}`]: order !== undefined,
    [`d-${display ?? d}`]: display !== undefined || d !== undefined,
    [`overflow-${overflow}`]: overflow !== undefined,
    [`overflow-x-${overflowX}`]: overflowX !== undefined,
    [`overflow-y-${overflowY}`]: overflowY !== undefined,
    [`vertical-align-${verticalAlign}`]: verticalAlign !== undefined,
    [`border-radius-${borderRadius}`]: borderRadius !== undefined,
    [`border-top-right-radius-${borderTopRightRadius}`]:
      borderTopRightRadius !== undefined,
    [`border-bottom-right-radius-${borderBottomRightRadius}`]:
      borderBottomRightRadius !== undefined,
    [`border-bottom-left-radius-${borderBottomLeftRadius}`]:
      borderBottomLeftRadius !== undefined,
    [`border-top-left-radius-${borderTopLeftRadius}`]:
      borderTopLeftRadius !== undefined,
    [`w-${width ?? w}`]: width !== undefined || w !== undefined,
    [`h-${height ?? h}`]: height !== undefined || h !== undefined,
    [`min-w-${minWidth ?? minW}`]: minWidth !== undefined || minW !== undefined,
    [`max-w-${maxWidth ?? maxW}`]: maxWidth !== undefined || maxW !== undefined,
    [`min-h-${minHeight ?? minH}`]:
      minHeight !== undefined || minH !== undefined,
    [`max-h-${maxHeight ?? maxH}`]:
      maxHeight !== undefined || maxH !== undefined,
    [`m-${margin ?? m}`]: margin !== undefined || m !== undefined,
    [`mt-${marginTop ?? mt}`]: marginTop !== undefined || mt !== undefined,
    [`mr-${marginRight ?? mr}`]: marginRight !== undefined || mr !== undefined,
    [`mb-${marginBottom ?? mb}`]:
      marginBottom !== undefined || mb !== undefined,
    [`ml-${marginLeft ?? ml}`]: marginLeft !== undefined || ml !== undefined,
    [`p-${padding ?? p}`]: padding !== undefined || p !== undefined,
    [`pt-${paddingTop ?? pt}`]: paddingTop !== undefined || pt !== undefined,
    [`pr-${paddingRight ?? pr}`]:
      paddingRight !== undefined || pr !== undefined,
    [`pb-${paddingBottom ?? pb}`]:
      paddingBottom !== undefined || pb !== undefined,
    [`pl-${paddingLeft ?? pl}`]: paddingLeft !== undefined || pl !== undefined,
    [`font-family-${fontFamily}`]: fontFamily !== undefined,
    [`font-size-${fontSize}`]: fontSize !== undefined,
    [`font-weight-${fontWeight}`]: fontWeight !== undefined,
    [`letter-spacing-${letterSpacing}`]: letterSpacing !== undefined,
    [`line-height-${lineHeight}`]: lineHeight !== undefined,
    [`text-align-${textAlign}`]: textAlign !== undefined,
    [`text-transform-${textTransform}`]: textTransform !== undefined,
  })
}
